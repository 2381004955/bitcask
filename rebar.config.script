PulseBuild = case os:getenv("BITCASK_PULSE") of
                 false ->
                     false;
                 _ ->
                     true
             end,
case PulseBuild of
    true ->
        PulseOpts =
            [{pulse_no_side_effect,[{erlang,display,1}]},
             {pulse_side_effect,
              [ {bitcask_nifs, keydir_new, '_'}
              , {bitcask_nifs, keydir_mark_ready, '_'}
              , {bitcask_nifs, keydir_put_int, '_'}
              , {bitcask_nifs, keydir_get_int, '_'}
              , {bitcask_nifs, keydir_get_epoch, '_'}
              , {bitcask_nifs, keydir_remove, '_'}
              , {bitcask_nifs, keydir_remove_int, '_'}
              , {bitcask_nifs, keydir_copy, '_'}
              , {bitcask_nifs, keydir_itr_int, '_'}
              , {bitcask_nifs, keydir_itr_next_int, '_'}
              , {bitcask_nifs, keydir_itr_release, '_'}
              , {bitcask_nifs, increment_file_id, '_'}
              , {bitcask_nifs, keydir_info, '_'}
              , {bitcask_nifs, keydir_release, '_'}
              , {bitcask_nifs, keydir_trim_fstats, '_'}

              , {bitcask_nifs, lock_acquire_int,   '_'}
              , {bitcask_nifs, lock_release_int,   '_'}
              , {bitcask_nifs, lock_readdata_int,  '_'}
              , {bitcask_nifs, lock_writedata_int, '_'}

              , {bitcask_nifs, file_open_int,   '_'}
              , {bitcask_nifs, file_close_int,  '_'}
              , {bitcask_nifs, file_sync_int,   '_'}
              , {bitcask_nifs, file_pread_int,  '_'}
              , {bitcask_nifs, file_pwrite_int, '_'}
              , {bitcask_nifs, file_read_int,   '_'}
              , {bitcask_nifs, file_write_int,  '_'}
              , {bitcask_nifs, file_position_int, '_'}
              , {bitcask_nifs, file_seekbof_int, '_'}

              , {bitcask_file, '_', '_'}
              , {bitcask_time, tstamp, 0}

              , {prim_file, '_', '_'}
              , {file, '_', '_'}
              , {filelib, '_', '_'}
              , {os, '_', '_'} ]},

             {pulse_replace_module,
              [ {gen_server, pulse_gen_server}
              , {application, pulse_application}
              , {supervisor, pulse_supervisor} ]}
            ],
        PulseCFlags = [{"CFLAGS", "$CFLAGS -DPULSE"}],
        UpdConfig = case lists:keysearch(eunit_compile_opts, 1, CONFIG) of
                        {value, {eunit_compile_opts, Opts}} ->
                            lists:keyreplace(eunit_compile_opts,
                                             1,
                                             CONFIG,
                                             {eunit_compile_opts, Opts ++ PulseOpts});
                        _ ->
                            [{eunit_compile_opts, PulseOpts} | CONFIG]
                    end,
        case lists:keysearch(port_env, 1, UpdConfig) of
            {value, {port_env, PortEnv}} ->
                lists:keyreplace(port_env,
                                 1,
                                 UpdConfig,
                                 {port_env, PortEnv ++ PulseCFlags});
            _ ->
                [{port_env, PulseCFlags} | UpdConfig]
        end;
    false ->
        CONFIG
end.
